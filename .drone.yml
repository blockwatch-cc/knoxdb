kind: pipeline
name: Knoxdb Pipeline
type: docker
platform:
  os: linux
  arch: amd64

trigger:
  event:
    - push
    - tag
    - pull_request

environment:
  CGO_ENABLED: 0

steps:
- name: run linter
  image: golangci/golangci-lint:1.62.0-go1.23.3
  commands:
    - golangci-lint run

- name: scan the files
  image: aquasec/trivy:0.57.1
  commands:
    - trivy fs --exit-code 1 --scanners vuln,config ./
    - trivy config --exit-code 1 ./

- name: go build
  image: golang:1.23.3-alpine
  commands:
    - apk add --no-cache git
    - go vet ./...
    - go test -v $(go list ./... | grep -v /internal/tests/run$)

---
kind: pipeline
name: Knoxdb Scenario Pipeline
type: docker
platform:
  os: linux
  arch: amd64

trigger:
  event:
    - push

environment:
  CGO_ENABLED: 0

steps:
- name: run linter
  image: golangci/golangci-lint:1.62.0-go1.23.3
  commands:
    - golangci-lint run

- name: scan the files
  image: aquasec/trivy:0.57.1
  commands:
    - trivy fs --exit-code 1 --scanners vuln,config ./
    - trivy config --exit-code 1 ./

- name: go build
  image: golang:1.23.3-alpine
  commands:
    - apk add --no-cache git
    - go vet ./...
    - go test -v $(go list ./... | grep /internal/tests/run$) -timeout 1h
